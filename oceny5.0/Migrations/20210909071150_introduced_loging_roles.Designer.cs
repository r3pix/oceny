// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using oceny5._0.Entities;

namespace oceny5._0.Migrations
{
    [DbContext(typeof(OcenyDBContext))]
    [Migration("20210909071150_introduced_loging_roles")]
    partial class introduced_loging_roles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("oceny5._0.Entities.Grupa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grupy");
                });

            modelBuilder.Entity("oceny5._0.Entities.Ocena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Ocena1")
                        .HasColumnType("float");

                    b.Property<int>("PrzedmiotId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("WykladowcaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrzedmiotId");

                    b.HasIndex("StudentId");

                    b.HasIndex("WykladowcaId");

                    b.ToTable("Oceny");
                });

            modelBuilder.Entity("oceny5._0.Entities.Przedmiot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Przedmioty");
                });

            modelBuilder.Entity("oceny5._0.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GrupaId")
                        .HasColumnType("int");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GrupaId");

                    b.ToTable("Studenci");
                });

            modelBuilder.Entity("oceny5._0.Entities.Wykladowca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HashedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stopien")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Wykladowcy");
                });

            modelBuilder.Entity("oceny5._0.Entities.Ocena", b =>
                {
                    b.HasOne("oceny5._0.Entities.Przedmiot", "Przedmiot")
                        .WithMany("Oceny")
                        .HasForeignKey("PrzedmiotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("oceny5._0.Entities.Student", "Student")
                        .WithMany("Oceny")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("oceny5._0.Entities.Wykladowca", "Wykladowca")
                        .WithMany("Oceny")
                        .HasForeignKey("WykladowcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Przedmiot");

                    b.Navigation("Student");

                    b.Navigation("Wykladowca");
                });

            modelBuilder.Entity("oceny5._0.Entities.Student", b =>
                {
                    b.HasOne("oceny5._0.Entities.Grupa", "Grupa")
                        .WithMany("Studenci")
                        .HasForeignKey("GrupaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupa");
                });

            modelBuilder.Entity("oceny5._0.Entities.Grupa", b =>
                {
                    b.Navigation("Studenci");
                });

            modelBuilder.Entity("oceny5._0.Entities.Przedmiot", b =>
                {
                    b.Navigation("Oceny");
                });

            modelBuilder.Entity("oceny5._0.Entities.Student", b =>
                {
                    b.Navigation("Oceny");
                });

            modelBuilder.Entity("oceny5._0.Entities.Wykladowca", b =>
                {
                    b.Navigation("Oceny");
                });
#pragma warning restore 612, 618
        }
    }
}
